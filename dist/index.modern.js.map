{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import isObject from 'lodash/isObject';\nimport isArray from 'lodash/isArray';\nimport Options from './models/Options';\n\nconst isBlob = (value) => value instanceof Blob;\nconst isFile = (value) => value instanceof File;\nconst isBoolean = (value) => typeof value === 'boolean';\nconst isNull = (value) => value === null;\nconst isUndefined = (value) => value === undefined;\n\nconst processData = (value: any, options: Options, formData: FormData, parent?: string) => {\n  const processedKey = parent || '';\n\n  if (isNull(value) || isUndefined(value)) {\n    if (!options.excludeNull) {\n      formData.append(processedKey, '');\n    }\n    return;\n  }\n\n  if (isFile(value)) {\n    formData.append(processedKey, value);\n    return;\n  }\n\n  if (isBlob(value)) {\n    formData.append(processedKey, value);\n    return;\n  }\n\n  if (isArray(value)) {\n    value.forEach((item, index) => {\n      const computedKey = `${processedKey}[${options.arrayIndexes ? index : ''}]`;\n      processData(item, options, formData, computedKey);\n    });\n    return;\n  }\n\n  if (isObject(value)) {\n    Object.entries(value).forEach(([key, data]) => {\n      let computedKey = key;\n      if (parent) {\n        computedKey = options.useDotSeparator\n          ? `${parent}.${key}`\n          : `${parent}[${key}]`;\n      }\n      processData(data, options, formData, computedKey);\n    });\n    return;\n  }\n\n  if (isBoolean(value)) {\n    formData.append(processedKey, value ? 'true' : 'false');\n    return;\n  }\n\n  formData.append(processedKey, value);\n};\n\nconst defaultOptions: Options = {\n  arrayIndexes: true,\n  excludeNull: true,\n  useDotSeparator: false,\n};\n\nconst objectToFormData = (payload: any, options: Partial<Options> = {}, formData: FormData = new FormData()) => {\n  if (!payload) return formData;\n\n  options = Object.assign(defaultOptions, options);\n\n  processData(payload, options as Options, formData);\n\n  return formData;\n};\n\nexport default objectToFormData;\n"],"names":["processData","value","options","formData","parent","processedKey","isNull","undefined","isUndefined","excludeNull","append","File","isFile","Blob","isBlob","isArray","forEach","item","index","arrayIndexes","isObject","Object","entries","key","data","computedKey","useDotSeparator","isBoolean","defaultOptions","payload","FormData","assign"],"mappings":"6DAIA,MAMMA,EAAc,CAACC,EAAYC,EAAkBC,EAAoBC,KACrE,MAAMC,EAAeD,GAAU,GAJjBH,CAAAA,GAAoB,OAAVA,EAMpBK,CAAOL,IALQA,CAAAA,QAAoBM,IAAVN,EAKRO,CAAYP,GAC1BC,EAAQO,aACXN,EAASO,OAAOL,EAAc,IAVpBJ,CAAAA,GAAUA,aAAiBU,KAerCC,CAAOX,IAhBGA,CAAAA,GAAUA,aAAiBY,KAqBrCC,CAAOb,GAJTE,EAASO,OAAOL,EAAcJ,GAS5Bc,EAAQd,GACVA,EAAMe,QAAQ,CAACC,EAAMC,KAEnBlB,EAAYiB,EAAMf,EAASC,KADJE,KAAgBH,EAAQiB,aAAeD,EAAQ,SAMtEE,EAASnB,GACXoB,OAAOC,QAAQrB,GAAOe,QAAQ,EAAEO,EAAKC,MACnC,IAAIC,EAAcF,EACdnB,IACFqB,EAAcvB,EAAQwB,mBACftB,KAAUmB,OACVnB,KAAUmB,MAEnBvB,EAAYwB,EAAMtB,EAASC,EAAUsB,KAxCxBxB,CAAAA,GAA2B,kBAAVA,EA6C9B0B,CAAU1B,GACZE,EAASO,OAAOL,EAAcJ,EAAQ,OAAS,SAIjDE,EAASO,OAAOL,EAAcJ,IAG1B2B,EAA0B,CAC9BT,cAAc,EACdV,aAAa,EACbiB,iBAAiB,iBAGM,CAACG,EAAc3B,EAA4B,GAAIC,EAAqB,IAAI2B,WAC1FD,GAEL3B,EAAUmB,OAAOU,OAAOH,EAAgB1B,GAExCF,EAAY6B,EAAS3B,EAAoBC,GAElCA,GANcA"}