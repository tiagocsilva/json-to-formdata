{"version":3,"file":"index.mjs","sources":["../src/index.ts"],"sourcesContent":["import isObject from 'lodash/isObject';\nimport isArray from 'lodash/isArray';\nimport Options from './models/Options';\n\nconst isBlob = (value) => value instanceof Blob;\nconst isFile = (value) => value instanceof File;\nconst isBoolean = (value) => typeof value === 'boolean';\nconst isNull = (value) => value === null;\nconst isUndefined = (value) => value === undefined;\n\nconst processData = (value: any, options: Options, formData: FormData, parent?: string) => {\n  const processedKey = parent || '';\n\n  if (isNull(value) || isUndefined(value)) {\n    if (!options.excludeNull) {\n      formData.append(processedKey, '');\n    }\n    return;\n  }\n\n  if (isFile(value)) {\n    formData.append(processedKey, value);\n    return;\n  }\n\n  if (isBlob(value)) {\n    formData.append(processedKey, value);\n    return;\n  }\n\n  if (isArray(value)) {\n    value.forEach((item, index) => {\n      const computedKey = `${processedKey}[${options.arrayIndexes ? index : ''}]`;\n      processData(item, options, formData, computedKey);\n    });\n    return;\n  }\n\n  if (isObject(value)) {\n    Object.entries(value).forEach(([key, data]) => {\n      let computedKey = key;\n      if (parent) {\n        computedKey = options.useDotSeparator\n          ? `${parent}.${key}`\n          : `${parent}[${key}]`;\n      }\n      processData(data, options, formData, computedKey);\n    });\n    return;\n  }\n\n  if (isBoolean(value)) {\n    formData.append(processedKey, value ? 'true' : 'false');\n    return;\n  }\n\n  formData.append(processedKey, value);\n};\n\nconst defaultOptions: Options = {\n  arrayIndexes: true,\n  excludeNull: true,\n  useDotSeparator: false,\n};\n\nconst objectToFormData = (payload: any, options: Partial<Options> = {}, formData: FormData = new FormData()) => {\n  if (!payload) return formData;\n\n  options = Object.assign(defaultOptions, options);\n\n  processData(payload, options as Options, formData);\n\n  return formData;\n};\n\nexport default objectToFormData;\n"],"names":["defaultOptions","arrayIndexes","excludeNull","useDotSeparator","payload","options","formData","FormData","processData","value","parent","processedKey","isNull","undefined","isUndefined","append","File","isFile","Blob","isBlob","isArray","forEach","item","index","isObject","Object","entries","key","computedKey","isBoolean","assign"],"mappings":"6DAIA,IAuDMA,EAA0B,CAC9BC,cAAc,EACdC,aAAa,EACbC,iBAAiB,kBAGM,SAACC,EAAcC,EAAgCC,GACtE,gBADsCD,IAAAA,EAA4B,aAAIC,IAAAA,EAAqB,IAAIC,UAC1FH,GAxDa,SAAdI,EAAeC,EAAYJ,EAAkBC,EAAoBI,GACrE,IAAMC,EAAeD,GAAU,IAJlB,SAACD,UAAoB,OAAVA,GAMpBG,CAAOH,IALO,SAACA,eAAoBI,IAAVJ,EAKRK,CAAYL,GAC1BJ,EAAQH,aACXI,EAASS,OAAOJ,EAAc,IAVrB,SAACF,UAAUA,aAAiBO,KAerCC,CAAOR,IAhBE,SAACA,UAAUA,aAAiBS,KAqBrCC,CAAOV,GAJTH,EAASS,OAAOJ,EAAcF,GAS5BW,EAAQX,GACVA,EAAMY,QAAQ,SAACC,EAAMC,GAEnBf,EAAYc,EAAMjB,EAASC,EADJK,OAAgBN,EAAQJ,aAAesB,EAAQ,WAMtEC,EAASf,GACXgB,OAAOC,QAAQjB,GAAOY,QAAQ,gBAAEM,OAC1BC,EAAcD,EACdjB,IACFkB,EAAcvB,EAAQF,gBACfO,MAAUiB,EACVjB,MAAUiB,OAEnBnB,OAAkBH,EAASC,EAAUsB,KAxCzB,SAACnB,SAA2B,kBAAVA,EA6C9BoB,CAAUpB,GACZH,EAASS,OAAOJ,EAAcF,EAAQ,OAAS,SAIjDH,EAASS,OAAOJ,EAAcF,GAc9BD,CAAYJ,EAFZC,EAAUoB,OAAOK,OAAO9B,EAAgBK,GAECC,GAElCA,GANcA"}